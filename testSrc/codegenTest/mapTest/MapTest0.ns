/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package codegenTest.mapTest

import napile.collection.HashMap
import napile.logging.Logger

/**
 * @author VISTALL
 */
class MapTest0
{
	static meth main(val arg : Array<String>)
	{
		val a = HashMap<Int, String>()
		a.put(1, 'test 1')
		a.put(1, 'test 2')

		Logger.System.info('size ' + a.size())
		Logger.System.info('require(test2) ' + a[1])

		val b = HashMap<Int, Int>()
		b.put(0, 123456789)

		Logger.System.info('size ' + b.size())
		Logger.System.info('require(123456789) ' + b[0])
		Logger.System.info('require(0) ' + b[1])

	/*	val c = HashMap<Int, @DefaultValue(-1) Int>()
		c.put(0, 123456789)

		Logger.System.info("size " + c.size())
		Logger.System.info("require(123456789) " + c[0])
		Logger.System.info("require(-1) " + c[1])     */

		val d = HashMap<Int, Int?>()
		d.put(0, 123456789)

		Logger.System.info('size ' + d.size())
		Logger.System.info('require(123456789) ' + d[0])
		Logger.System.info('require(null) ' + d[1])
	}
}