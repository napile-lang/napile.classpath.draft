package napile.reflect

/**
 * @author VISTALL
 */
class Method : Member
{
	local this(val owner : Class<Any>?, val name : String, val modifiers : Array<Modifier>) : Member(owner, name, modifiers)

	meth invoke(val object : Any, val arguments : Array<Any?>) : Any?
	{
		return null //TODO [VISTALL]
	}

	meth invokeStatic(val arguments : Array<Any?>) : Any?
	{
		if (!isStatic())
			throw IllegalArgumentException("Use 'invoke' for instance method call")

		return null //TODO [VISTALL]
	}
}