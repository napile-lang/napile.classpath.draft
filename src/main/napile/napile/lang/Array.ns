package napile.lang

import napile.collection.Iterator
import napile.collection.Iterable

/**
 * @author VISTALL
 */
final class Array<E> : Iterable<E>
{
	val length : Int

	this(length)
	{
		init()
	}

	native meth init()

	native meth set(val index : Int, val value : E) : Array<E> //TODO [VISTALL] return 'this' type

	native meth get(val index : Int) : E

	override meth iterator() : Iterator<E> = ArrayIterator<E>(this)

	override meth clone() : Array<E>
	{
		var newArray = Array<E>(length)
		var i = 0
		for(it in this)
			newArray[i++] = it
		return newArray
	}
}