package napile.lang

import napile.io.Console

/**
 * @author VISTALL
 */
class StringBuilder
{
	local var array : Array<Char> = Array<Char>(10)
	local var count : Int = 0

	this()

	meth plus(value : Any) : StringBuilder
	{
		var str = value.toString()

		var arrayOfString = str.array;

		var newCount = arrayOfString.length + count
		if(newCount > array.length)
			expandCapacity(newCount)

		var i = 0;
		while (i < arrayOfString.length)
			array[count ++] = arrayOfString[i++];

		count = newCount;

		return this
	}

	meth expandCapacity(minimumCapacity : Int)
	{
		var newCapacity = (array.length + 1) * 2;
		if (newCapacity < 0)
			newCapacity = Int.MAX_VALUE;
		else if (minimumCapacity > newCapacity)
			newCapacity = minimumCapacity;

		array = ArrayUtil.copyOf(array, newCapacity);
	}

	override meth toString() : String
	{
		return String(array, 0, count);
	}
}