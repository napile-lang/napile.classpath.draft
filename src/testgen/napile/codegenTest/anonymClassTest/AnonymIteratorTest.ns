/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package codegenTest.anonymClassTest

import napile.collection.Iterator
import napile.logging.Logger

/**
 * @author VISTALL
 */
class AnonymIteratorTest
{
	var insideVar : String = 'Inside Var'

	this()

	meth test()
	{
		val a = anonym : Iterator<String>
		{
			var index : Int = 1

			override meth next(): String
			{
				throw UnsupportedOperationException()
			}

			override meth hasNext(): Bool
			{
				Logger.System.info(insideVar)
				index ++
				Logger.System.info(index.toString())
				return false
			}

			override meth remove()
			{
				throw UnsupportedOperationException()
			}
		}

		Logger.System.info(a.hasNext().toString())
	}

	static meth main(val arg : Array<String>)
	{
		AnonymIteratorTest().test()
	}
}